@model POSApplication.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/plugins/select2/select2.min.css" rel="stylesheet" />
<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">Create Products Information</h5>
    </div>
    <div class="panel-body">





        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @*<h4>Product</h4>
                    <hr />*@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <input type="hidden" id="Message" value="@ViewBag.Message">
                <div class="form-group">
                    <div class="col-md-2">

                        @Html.Label("Product Category", htmlAttributes: new { @class = "control-label col-md-12" })
                    </div>
                    <div class="col-md-5">

                        @Html.DropDownList("ProductCategoryId", null, "--Select--", htmlAttributes: new { @id = "ProductCategoryId", @class = "form-control select2", required = "required" })
                        @Html.ValidationMessageFor(model => model.ProductCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    @Html.Label("Product Code", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.Label("Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

    </div> <!-- panel body -->
</div>



@*<div class="form-group" style="padding-top:20px;">

        <div class="col-lg-3">
            <input type="hidden" value="" id="UId" name="UId" />

            <div class="col-lg-3">
                <input type="file" name="postedFiles" id="FileUpload1" />
            </div>
        </div>


    </div>*@




<div class="panel panel-primary panel-bordered">
    <div class="panel-body">
        <div class="form-group">
            <div class="col-md-12">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                <button type="button" class="btn btn-success" id="saveState">Save <i class="icon-arrow-right14 position-right"></i></button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $(".select2").select2();
    });

    $('#saveState').click(function () {



        if ($.trim($('#ProductName').val()) === "") {
            alert('Product Name required');
            $('#ProductName').focus();
            return false;
        }
        else if ($.trim($('#ProductCategoryId').val()) === "") {
            alert('Choose Product Category');
            $('#ProductCategoryId').focus();
            return false;
        }
        else {
            SaveUserData();
        }

        //var file = $('#FileUpload1').val();
        //if (file == '') {
        //    alert("Please Upload a Image First");
        //}





    });



    function SaveUserData() {

        $("#saveState").attr("disabled", "disabled");

        // save Image
        //var fileUpload = $("#FileUpload1").get(0);
        //var files = fileUpload.files;

        // Create FormData object
        var fileData = new FormData();

        // Looping over all files and add it to FormData object
        //for (var i = 0; i < files.length; i++) {
        //    fileData.append(files[i].name, files[i]);
        //}

        // Adding one more key to FormData object

        //alert("ok");

        var ProductCode = $('#ProductCode').val();
        var ProductName = $('#ProductName').val();
        var SupplierId = $('#SupplierId').val();
        var ProductCategoryId = $('#ProductCategoryId').val();
        var PresentQuantity = $('#PresentQuantity').val();
        var PurchasePrice = $('#PurchasePrice').val();


        //fileData.append('ProductCode', ProductCode);
        //fileData.append('ProductName', ProductName);
        //fileData.append('SupplierId', SupplierId);
        //fileData.append('ProductCategoryId', ProductCategoryId);
        //fileData.append('PresentQuantity', PresentQuantity);
        //fileData.append('PurchasePrice', PurchasePrice);
        //fileData.append('UpdatedPrice', UpdatedPrice);
        //fileData.append('SalesPrice', SalesPrice);
        //fileData.append('Discount', Discount);


        var data = {
            Id: 0,
            ProductCode: ProductCode,
            ProductName: ProductName,
            SupplierId: SupplierId,
            ProductCategoryId: ProductCategoryId,
            PresentQuantity: PresentQuantity,
            PurchasePrice: PurchasePrice
        };


        $.ajax({
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',

            type: 'POST',
            url: '/Products/SaveData',
            data: data,
            success: function (result) {
                //console.log(result);
                $("#saveState").removeAttr("disabled");
                if (result.flag == true) {

                    //$('#submit').click();


                    Swal.fire({
                        position: 'top',
                        icon: 'success',
                        title: 'Successfully Saved!',
                        showConfirmButton: true,
                    }).then((result) => {
                        if (result.value) {
                            window.location = "/Products/Index";
                        }
                    })

                }
                else {
                    alert(result.message);
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Error: ' + textStatus + ' - ' + errorThrown);
                $("#saveState").removeAttr("disabled");
            }
        });

    }



</script>