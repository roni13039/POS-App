@model POSApplication.Models.SalesInvoiceMas

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">User Information</h5>
    </div>
    <div class="panel-body">



        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>SalesInvoiceMas</h4>
        <hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" id="Id" value="@Model.Id">

            <div class="row">
                <div class="col-lg-3" @*style="padding-left: 50px;"*@>
                    <div class="form-group form-group-xs">
                        @Html.Label("InvoiceNo", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("InvoiceNo", null, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("Customer Name", new { @class = "control-label col-lg-6" })
                        <div class="col-lg-6">
                            @Html.TextBox("CustomerName", null, new { @class = "form-control" })

                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("Date", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("Date", "", new { @class = "form-control Datepicker", @Value = @DateTime.Now.ToShortDateString() })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
             
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("Phone", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("Phone", null, new { @class = "form-control" })

                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("Address", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("Address", null, new { @class = "form-control" })

                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("Description", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("Description", null, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("TotalBill", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("TotalBill", null, new { @class = "form-control" })

                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("PaidBill", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("PaidBill", null, new { @class = "form-control" })

                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="form-group form-group-xs">
                        @Html.Label("DueBalance", new { @class = "control-label col-lg-4" })
                        <div class="col-lg-8">
                            @Html.TextBox("DueBalance", null, new { @class = "form-control" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group form-group-xs">
                        <div class="col-lg-3">
                            @Html.Label("Product Serial No  (Barcode) ", new { @class = "control-label col-lg-12", @style = "text-align:left" })
                        </div>
                        <div class="col-lg-6">
                            @Html.TextBox("SerialNo", null, new { @class = "form-control", @style = "text-align:left" })
                        </div>
                    </div>
                </div>
            </div>

        </div>
        }
        @*//----------Details Table--------------//*@


        <div class="details well" style="border: 1px solid white;">
            <div class="jumbotron" style="padding:10px;">


                <div class="table-responsive scrolling">
                    <table class="Resource-list table table-bordered TableItemDetails" id="TableDetails">
                        <thead>
                            <tr class="bg-blue-gradient">


                                <th class="col-sm-1">Sl No</th>
                                <th class="col-lg-1">Product Category</th>
                                <th class="col-lg-1">Product Name</th>
                                <th class="col-lg-1">Serial No</th>
                                <th class="col-lg-1">Purchase Price</th>
                                <th class="col-lg-1">Sales Price</th>
                                <th class="col-lg-1">Qty</th>
                                <th class="col-lg-1">Amount</th>
                                <th class="col-lg-1">Action</th>
                            </tr>

                        </thead>
                        <tbody>
                            <tr>
                                <td><button type="button" class="btn btn-success btn-rounded btn-sm" id="btnAddRow"><span class="glyphicon glyphicon-plus"></span> Add Row</button> </td>
                                @*<td></td>*@
                            </tr>
                        </tbody>
                        <tfoot>

                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td colspan="1" style="text-align:right;  padding-right:20px;" height="30px;">&nbsp; Total</td>
                                <td>
                                    @*<label class="text-bold total_amount" style="padding-left:10px;"></label>*@
                                    <input type="text" name="TotalAmount" class="bg-primary text-white" id="TotalAmount" readonly />
                                </td>

</tfoot>
                    </table>
                </div>
            </div>
        </div>
        @*//-------------End Details table----------------//*@
        <br>


        <div class="form-group">
            <div class="col-md-offset-4 col-lg-10">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
                <input type="button" id="Save" value="Save" class="btn btn-success" />
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <link href="~/Content/plugins/datepicker/datepicker3.css" rel="stylesheet" />
    <script src="~/Content/plugins/datepicker/bootstrap-datepicker.js"></script>



    <script type="text/javascript">
        $('document').ready(function () {

        LoadSavedData();

        var CheckInType = $('input[name=CustomerType]:checked').val()
        if (CheckInType == "false") {
            $("#CustomerId").attr("disabled", "disabled");
            $("#Phone").removeAttr("disabled");
            $("#Address").removeAttr("disabled");
            $("#Description").removeAttr("disabled");
        }

        if (CheckInType == "true") {
            $("#CustomerId").removeAttr("disabled");
            $("#Phone").attr("disabled", "disabled");
            $("#Address").attr("disabled", "disabled");
            //$("#Phone").removeAttr("disabled");
            //$("#Address").removeAttr("disabled");
            $("#Description").removeAttr("disabled");
            
            GetCustomerName();
        }

        $('.Datepicker').datepicker({
            format: 'dd/mm/yyyy',
            todayHighlight: true,
            todayBtn: true,
            autoclose: true
        });

        $(".select2").select2();
        $("#Save").attr("disabled", "disabled");

    });



        //------------Load Saved Data--------//
        var flag = false;

        function LoadSavedData() {
            var Id = $("#Id").val();
            flag = true;

            $.ajax({
                type: "post",
                url: "/SalesInvoice/GetSavedData",
                datatype: "json",
                data: { Id: Id },
                traditional: true,
                success: function (data) {
                    var si = 0;
                    for (var i = 0; i < data.length; i++) {

                        var si = i + 1;
                        var newRow = jQuery('<tr>'

                       + '<td><input type="text" name="SlNo" value="' + si + '" class="form-control  input-sm SlNo" readonly/></td>'

                       + '<td><select name="ProductCategory" class="ProductCategory form-control input-sm select2"><option value="' + data[i].ProductCategoryId + '">' + data[i].ProductCatagoryName + '</option>  </select></td>'
                       + '<td><select name="ProductName" class="ProductName col-lg-1 form-control input-sm select2"><option value="' + data[i].ProductId + '">' + data[i].ProductName + '</option> </select></td>'
                       + '<td><input type="text" name="SerialNo" value="' + data[i].SerialNo + '"  class="form-control input-sm SerialNo" readonly/></td>'
                       + '<td><input type="text" name="PurchasePrize" value="' + data[i].PurchasePrize + '" class="form-control input-sm PurchasePrize inline" style="width: 60px;"/> <input type="radio" class="PriceType " name="RPurchasePrize" value="1"> </td>'
                       + '<td><input type="text" name="SalesPrize" value="' + data[i].SalesPrize + '" class="form-control input-sm SalesPrize"/></td>'
                       + '<td><input type="text" name="Qty" value="' + data[i].Qty + '"   class="form-control input-sm Qty"/></td>'                     
                       + '<td><input type="text" name="Amount" value="' + data[i].Amount + '" class="form-control input-sm Amount" readonly/></td>'

                      + '<td><button onclick="RemoveRow(this)" type="button" class="btn btn-xs labeled btn-danger"><i class="glyphicon glyphicon-remove"></i></td></tr>');
                      jQuery('table.TableItemDetails tbody').find('tr:last').before(newRow);


                    }
                    GetProductCatagoryName();
                    GetProductName();

                    CalculateAmount();

                    var lent = $('table.TableItemDetails tbody tr').length - 1;
                    if (lent > 0) {
                        $("#Save").removeAttr('disabled');
                    }
                }
            });
        }

    //-----Customer Type Regular or Not Regular-----//

    $('.CheckInType').change(function () {

        var CheckInType = $('input[name=CustomerType]:checked').val()

        if (CheckInType == "false") {
            $("#CustomerId").attr("disabled", "disabled");
            $("#Phone").removeAttr("disabled");
            $("#Address").removeAttr("disabled");
            $("#Description").removeAttr("disabled");
            $('#CustomerId').val("").empty();
            $('#Phone').val("");
            $('#Address').val("");
            $('#Description').val("");
        }

        else {
            $("#CustomerId").removeAttr("disabled");
            $("#Phone").attr("disabled", "disabled");
            $("#Address").attr("disabled", "disabled");
            //$("#Phone").removeAttr("disabled");
            //$("#Address").removeAttr("disabled");
            $("#Description").removeAttr("disabled");
            $('#CustomerId').val("");
            $('#Phone').val("");
            $('#Address').val("");
            $('#Description').val("");
            GetCustomerName();
        }
    });

    function GetCustomerName() {

        $.ajax({
            url: "/SalesInvoice/GetCustomerName",
            type: "post",
            data: {},
            dataType: "json",
            async: false,
            success: function (data) {

                $("#CustomerId").append(new Option("Select", ""));

                $.each(data, function (i, item) {
                    var optionhtml = '<option value="' +
                        data[i].Value + '">' + data[i].Text + '</option>';
                    $("#CustomerId").append(optionhtml);
                });
            },
        });
    }


    //-----Customer on change get phone/address-----//

    $('#CustomerId').change(function () {

        var CustomerId = $(this).val();

        $.ajax({
            url: "/SalesInvoice/GetCustomerRelatedData",
            type: "POST",
            dataType: 'json',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: {
                CustomerId: CustomerId
            },
            success: function (result) {
                console.log(result);

                $("#Phone").val(result.Phone);
                $("#Address").val(result.Address);

            },
            error: function () {
                alert('Something went wrong!');
            }
        });
    });



    $('#PaidBill').change(function () {

        var PaidBill = $(this).val();
        var TotalBill = $('#TotalBill').val();
        var duebalance = (TotalBill * 1) - (PaidBill * 1);
        $('#DueBalance').val(duebalance);
    });



    var SlNo = 0;
    var count = 0;
    //--------------Add New Row ----- Details Table----
    $('#btnAddRow').click(function () {

        if (count > 0 || flag == true) {
            var newserial = 0;

            $('table.TableItemDetails tbody .SlNo').each(function (index) {
                newserial = 0;
                newserial = newserial + index * 1 + 1;
            });
            SlNo = newserial;
        }
        AddNewRow();
        var lent = $('table.TableItemDetails tbody tr').length - 1;
        if (lent > 0) {
            $("#Save").removeAttr('disabled');
        }
    });

        $('#SerialNo').on('keypress', function (e) {
            if (e.keyCode === 13) {
                $.ajax({
                    url: '/SalesInvoice/GetProductBySerialNo/',
                    data: "{'SerialNo': '" + $('#SerialNo').val() + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        loadProductBySerialNo(data);

                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });

            }
        });
        function loadProductBySerialNo(data) {

            var lent = $('table.TableItemDetails tbody tr').length - 1;
            for (var i = 0; i < data.length; i++) {
                lent++;
                var newRow = jQuery('<tr>'
                    + '<td><input type="text" name="SlNo" value="' + lent + '" class="form-control  input-sm SlNo" readonly/></td>'
                    + '<td><select name="ProductCategory" class="ProductCategory form-control input-sm select2"><option value="' + data[i].ProductCategoryId + '">' + data[i].ProductCatagoryName + '</option>  </select></td>'
                    + '<td><select name="ProductName" class="ProductName col-lg-1 form-control input-sm select2"><option value="' + data[i].ProductId + '">' + data[i].ProductName + '</option> </select></td>'
                    + '<td><input type="text" name="SerialNo" value="' + data[i].SerialNo + '"  class="form-control input-sm SerialNo" readonly/></td>'
                    + '<td><input type="number" name="PurchasePrize" value="' + data[i].PurchasePrize + '"  class="form-control input-sm PurchasePrize" readonly/></td>'
                    + '<td><input type="number" name="SalesPrize"  class="form-control input-sm SalesPrize"/></td>'
                    + '<td><input type="number" name="Qty"  class="form-control input-sm Qty"/></td>'
                    + '<td><input type="number" name="Amount"   class="form-control input-sm Amount" readonly/></td>'

                    + '<td><button onclick="RemoveRow(this)" type="button" class="btn btn-xs labeled btn-danger"><i class="glyphicon glyphicon-remove"></i></td></tr>');

                jQuery('table.TableItemDetails tbody').find('tr:last').before(newRow);

                var lent = $('table.TableItemDetails tbody tr').length - 1;
                if (lent > 0) {
                    $("#Save").removeAttr('disabled');
                }

            }
        }


        function AddNewRow(rowIndex) {
            SlNo++;

            var newRow = jQuery('<tr>'
                + '<td><input type="text" name="SlNo" value="' + SlNo + '" class="form-control  input-sm SlNo" readonly/></td>'

                + '<td><select name="ProductCategory" class="ProductCategory form-control input-sm select2"></select></td>'
                + '<td><select name="ProductName" class="ProductName col-lg-1 form-control input-sm select2"></select></td>'
                + '<td><input type="text" name="SerialNo" class="form-control input-sm SerialNo" readonly/></td>'
                + '<td><input type="number" name="PurchasePrize" class="form-control input-sm PurchasePrize" readonly/></td>'
                + '<td><input type="number" name="SalesPrize" class="form-control input-sm SalesPrize"/></td>'
                + '<td><input type="number" name="Qty"   class="form-control input-sm Qty"/></td>'
                + '<td><input type="number" name="Amount" class="form-control input-sm Amount" readonly/></td>'

                + '<td><button onclick="RemoveRow(this)" type="button" class="btn btn-xs labeled btn-danger"><i class="glyphicon glyphicon-remove"></i></td></tr>');
            jQuery('table.TableItemDetails tbody').find('tr:last').before(newRow);

            GetProductCatagoryName(rowIndex);
            // GetProductName();
        }




    // LOad Product Catagory For Addd new Row-----------//

    function GetProductCatagoryName() {

        $.ajax({
            url: "/SalesInvoice/GetProductCatagoryName",
            type: "post",
            data: {},
            dataType: "json",
            async: false,
            success: function (data) {

                $(".ProductCategory").append(new Option("Select", ""));

                $.each(data, function (i, item) {
                    var optionhtml = '<option value="' +
                        data[i].Value + '">' + data[i].Text + '</option>';
                    $(".ProductCategory").append(optionhtml);
                });
            },
        });
    }

    function GetProductName() {
        $.ajax({
            url: "/SalesInvoice/GetProductName",
            type: "post",
            data: {},
            dataType: "json",
            async: false,
            success: function (data) {
                //$(".ProductName").empty();
                $(".ProductName").append(new Option("Select", ""));

                $.each(data, function (i, item) {
                    var optionhtml = '<option value="' +
                        data[i].Value + '">' + data[i].Text + '</option>';
                    $(".ProductName").append(optionhtml);
                });
                $(".select2").select2({ width: '100%' });
            },
        });
    }



    //------- Load Product Name On Change Of Product catagory======//

    $('table.TableItemDetails tbody').on('change', '.ProductCategory', function () {

        var ProductCategoryId = $(this).val();
        var Currentrow = $(this).closest('tr');
        CurrentRowIndex = $(this).closest('tr').index();

        if (IsExist(ProductCategoryId, CurrentRowIndex) == true) {
            Swal.fire({
                position: 'top',
                icon: 'error',
                title: 'This item is Exists in Previous Row'
                //text: 'This item is Exists in Previous Row',
            })

            $(this).empty();
            //$('table.TableItemDetails tbody tr').eq(CurrentRowIndex).find(".ExtraItemInformationId").empty();
            GetProductCatagoryName();
        }
        else {
            $.ajax({
                url: "/SalesInvoice/GetProductByCatagoryId",
                type: "POST",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: {
                    ProductCategoryId: ProductCategoryId
                },
                success: function (data) {
                    if (data == false) {
                        Swal.fire({
                            position: 'top',
                            icon: 'error',
                            title: 'Please Select any one'
                        })
                    }
                    Currentrow.find(".ProductName").empty();
                    Currentrow.find(".ProductName").removeAttr('disabled');
                    Currentrow.find(".PurchasePrize").val("");
                    Currentrow.find(".UpdatedPrice").val("");
                    Currentrow.find(".ProductName").append(new Option("Select", ""));

                    $.each(data, function (i, item) {

                        var optionhtml = '<option value="' +
                            data[i].Value + '">' + data[i].Text + '</option>';
                        Currentrow.find(".ProductName").append(optionhtml);
                    });

                    $(".select2").select2({ width: '100%' });
                },
                error: function () {
                    alert('Something went wrong!');
                }
            });
        }
    });
    //-----End-------   //------- Load Product Name On Change Of Product catagory======//

    //------------- Check The previous Item Is Exist Or Not----------//
    function IsExist(id, CurrentRowIndex) {

        var currentIndex = CurrentRowIndex;
        $('table.TableItemDetails tbody .ProductCategory').each(function (i, item) {

            if (currentIndex == i) {
                isValid = false;
                return true;
            }
            else if (item.value == id) {
                isValid = true;
                return false;
            }
        });
        return isValid;
    }

    //-------Exist Checking End--------------------///

    //--------------Load Product Prize & Sale Prize on Change Product Name------------//

    $('table.TableItemDetails tbody').on('change', '.ProductName', function () {

        var ProductId = $(this).val();
        var Currentrow = $(this).closest('tr');
        $.ajax({
            url: "/SalesInvoice/GetPrizeByProductId",
            type: "POST",
            dataType: 'json',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: { ProductId: ProductId },
            success: function (data) {
                Currentrow.find('input.PurchasePrize').val(data.PurchasePrize);
                Currentrow.find('input.SalesPrize').val(data.SalesPrize);


                Currentrow.find('input.UpdatedPrice').val(data.UpdatedPrice);
                //CalculateTotal();
                //CalculateTotal();


            },
            error: function () {
                alert('Something went wrong!');
            }
        });
    });



    //---------------- Get Amount By On change Quantity=========//
    $('table.TableItemDetails tbody').on('change', '.Qty', function () {
        var Currentrow = $(this).closest('tr');
        var Quantity = $(this).val();
        var prize = Currentrow.find('.SalesPrize').val();
        var Amount = Quantity * 1 * prize * 1;

        Currentrow.find('input.Amount').val(Amount);

        CalculateAmount();
    });

    //---------------- Get Amount By On change sales Price=========//
    $('table.TableItemDetails tbody').on('change', '.SalesPrize', function () {
        var Currentrow = $(this).closest('tr');
        var SalesPrize = $(this).val();
        var quantity = Currentrow.find('.Qty').val();
        var Amount = quantity * 1 * SalesPrize * 1;

        Currentrow.find('input.Amount').val(Amount);

        CalculateAmount();
    });


    $('table.TableItemDetails tbody').on('change', '.Discount', function () {
        var Currentrow = $(this).closest('tr');
        var Discount = $(this).val();
        var Quantity = Currentrow.find('.Qty').val();
        var prize = Currentrow.find('.SalesPrize').val();
        var WithoutDiscount = Quantity * 1 * prize * 1;
        var Amount = (WithoutDiscount * 1) - (Discount * 1);
        Currentrow.find('input.Amount').val(Amount);

        CalculateAmount();
    });




    function CalculateAmount() {
        var sumAmount = 0;
        $("table.TableItemDetails tbody .Amount").each(function () {
            sumAmount = sumAmount * 1 + $(this).val() * 1;
        });

        $('#TotalAmount').val(sumAmount);
        $('#TotalBill').val(sumAmount);
    }



    //------------Remove Details Row-------//
    function RemoveRow(e) {
        count++;

        var currRowIndex = $(e).closest('tr').index() + 1;
        $(e).parent().parent().remove();

        //----------Update Serila Number------------//

        $('table.TableItemDetails tbody .SlNo').each(function (index) {
            $(this).val(index + 1);
        });

        CalculateAmount();
    }



    //-------------Start Save-------------//

    $('#Save').click(function () {

        if ($('input[name=CustomerType]:checked').val() == undefined) {
            Swal.fire({
                position: 'top',
                icon: 'error',
                title: 'Choose Customer Type'
            })
            $('#CustomerType').focus();
        }

        else if ($('input[name=CustomerType]:checked').val() == "true") {
            if ($('#CustomerId').val() == "") {
                Swal.fire({
                    position: 'top',
                    icon: 'error',
                    title: 'Customer Name is Required'
                })
                $('#CustomerId').focus();
            }
        }

        else if ($('#PaidBill').val() == "") {
            Swal.fire({
                position: 'top',
                icon: 'error',
                title: 'Phone No is Required'
            })
            $('#PaidBill').focus();
        }

        else if (CheckDetailData() == true) {
            SaveData();
        }
    });


    function CheckDetailData() {
        var totRow = $('.TableItemDetails tbody tr').length - 1;
        //alert(totRow);
        for (var i = 0; i < totRow; i++) {

            if ($('Table.TableItemDetails tbody tr').eq(i).find("select.ProductCategory").val() == "") {
                Swal.fire({
                    position: 'top',
                    icon: 'error',
                    title: 'The Product Category is Required'

                });
                return false;
            }
            else if ($('Table.TableItemDetails tbody tr').eq(i).find("input.ProductName").val() == "") {
                Swal.fire({
                    position: 'top',
                    icon: 'error',
                    title: 'The Product Name is Required'
                });
                return false;
            }

            else if ($('Table.TableItemDetails tbody tr').eq(i).find("input.Qty").val() == "") {
                Swal.fire({
                    position: 'top',
                    icon: 'error',
                    title: 'Quantity Field is Required'
                });
                return false;
            }
        }
        return true;
    }

    function SaveData() {

        var InvoiceNo = $('#InvoiceNo').val();

        var Date = $('#Date').val();
        var CustomerName = $('#CustomerName').val();
        var Phone = $('#Phone').val();

        var Address = $('#Address').val();
        var Description = $('#Description').val();
        var TotalBill = $('#TotalBill').val();


        var ProductCategory = document.getElementsByName("ProductCategory");
        var ProductName = document.getElementsByName("ProductName");
        var PurchasePrize = document.getElementsByName("PurchasePrize");
        var SerialNo = document.getElementsByName("SerialNo");
        var SalesPrize = document.getElementsByName("SalesPrize");
        var Qty = document.getElementsByName("Qty");
        var Amount = document.getElementsByName("Amount");

        var DetailsValue = [];
        var Id = $("#Id").val();

        for (var i = 0; i < ProductCategory.length; i++) {

            DetailsValue.push({
                SalesInvoiceMasId: Id,
                ProductCategoryId: ProductCategory[i].value,
                ProductId: ProductName[i].value,
                PurchasePrize: PurchasePrize[i].value,
                SalesPrize: SalesPrize[i].value,
                Quantity: Qty[i].value,
                Amount: Amount[i].value
            });
        }
        console.log(DetailsValue);
        $.ajax({
            url: "/SalesInvoice/UpdateSalesInvoice",
            type: "POST",
            dataType: 'json',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: {
                SalesInvoiceDetails: DetailsValue,
                Id: Id,
                InvoiceNo: InvoiceNo,
                CustomerType: CustomerType,
                Date: Date,
                CustomerId: CustomerId,
                Phone: Phone,
                Address: Address,
                Description: Description,
                TotalBill: TotalBill
            
          
            },

            success: function (result) {
                $("#Save").removeAttr("disabled");
                if (result.flag == true) {
                    Swal.fire({
                        position: 'top',
                        icon: 'success',
                        title: 'Successfully Updated!',
                        showConfirmButton: true,
                    }).then((result) => {
                        if (result.value) {
                            window.location = "/SalesInvoice/Index";
                        }
                    })
                }

                else {
                    alert("Data Updated Failed");
                }
            },
            error: function () {
                alert('Something went wrong!');
            }

        });



    }


    </script>
}
