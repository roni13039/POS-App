@model POSApplication.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">Update Products Information</h5>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>Product</h4>
        <hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)


            <div class="form-group">
                @*@Html.LabelFor(model => model.ProductCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.Label("Product Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @*@Html.EditorFor(model => model.ProductCategoryId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownList("ProductCategoryId", null, "--Select--", htmlAttributes: new { @id = "ProductCategoryId", @class = "form-control select2", required = "required" })
                    @Html.ValidationMessageFor(model => model.ProductCategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @*@Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.Label("Product Code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.Label("Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>



        </div>
        }
    </div>
</div>

<div class="panel panel-primary panel-bordered">
    <div class="panel-body">
        <div class="form-group">
            <div class="row">
                <div class="col-lg-12">
                    <div class="col-lg-2 col-lg-offset-3" style="text-align:right;">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                    </div>
                    <div class="col-lg-3" style="text-align:left;">
                        <button type="button" class="btn btn-success" id="saveState">Update <i class="icon-arrow-right14"></i></button>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Plugins/Image Zoom/jquery.bighover.js"></script>
    <script type="text/javascript">

        var deletedItems = [];
        $(document).ready(function ()
        {
            $(".select2").select2();

            //$.validator.methods.date = function (value, element) {
            //    return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
            //}

            //$('.demo').bighover({
            //    position: 'right',
            //    width: "200",
            //    height: "200"
            //});

        });


        $('#saveState').click(function () {

            if ($.trim($('#ProductCode').val()) === "") {
                alert('Product Code required');
                $('#ProductCode').focus();
            }

            else if ($.trim($('#ProductName').val()) === "") {
                alert('Product Name required');
                $('#ProductName').focus();
            }

          
            else if ($.trim($('#ProductCategoryId').val()) === "") {
                alert('Choose Product Category');
                $('#ProductCategoryId').focus();
            }
            else
            {
                UpdateData();
            }

        });

        function UpdateData()
        {


            //var fileUpload = $("#FileUpload1").get(0);
            //var files = fileUpload.files;

            //// Create FormData object
            //var fileData = new FormData();

            //// Looping over all files and add it to FormData object
            //for (var i = 0; i < files.length; i++) {
            //    fileData.append(files[i].name, files[i]);
            //}


            var Id = $('#Id').val();
            var ProductCode = $('#ProductCode').val();
            var ProductName = $('#ProductName').val();
            var ProductCategoryId = $('#ProductCategoryId').val();
           
            //fileData.append('Id', Id);
            //fileData.append('ProductCode', ProductCode);
            //fileData.append('ProductName', ProductName);
            //fileData.append('SupplierId', SupplierId);
            //fileData.append('ProductCategoryId', ProductCategoryId);
            //fileData.append('PresentQuantity', PresentQuantity);
            //fileData.append('PurchasePrice', PurchasePrice);
            //fileData.append('UpdatedPrice', UpdatedPrice);
            //fileData.append('SalesPrice', SalesPrice);
            //fileData.append('Discount', Discount);

          var data = JSON.stringify({
                Id: Id,
                ProductCode: ProductCode,
                ProductName: ProductName,
               
                ProductCategoryId: ProductCategoryId,
                
             
            });

            $.ajax({
                contentType: "application/json",
                type: 'POST',
                url: '/Products/UpdateData',
                data: data,
                success: function (result) {
                    console.log(result);
                    $("#saveState").removeAttr("disabled");
                    if (result.flag == true) {

                        //$('#submit').click();

                        Swal.fire({
                            position: 'top',
                            icon: 'success',
                            title: 'Updated Successfully!',
                            showConfirmButton: true,
                        }).then((result) => {
                            if (result.value) {
                                window.location = "/Products/Index";
                            }
                        })


                    }

                    else {
                        alert(result.message);
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error: ' + textStatus + ' - ' + errorThrown);
                    $("#saveState").removeAttr("disabled");
                }
            });

        }



        $('.deleteImage').click(function () {
            var retVal = confirm("Do you want to delete this image ?");
            if (retVal == true) {
                var row = $(this).closest('div');
                var id = row.find('input[name=DeleteUserImage]').val();
                //alert(id);

                $.ajax({
                    url: "/Products/DeleteImage",
                    type: "post",
                    data: {
                        Id: id
                    },
                    dataType: "json",

                    success: function (flag) {
                        console.log(flag);

                        if (flag.flag == true) {

                            Swal.fire({
                                position: 'top',
                                icon: 'success',
                                title: 'Deleted Successfully!',
                                showConfirmButton: true,
                            }).then((result) => {
                                if (result.value) {

                                    location.reload(true);
                                }
                            })

                        }
                        else {
                            alert(flag.message);
                        }

                    },

                    error: function (xhr) {
                        console.log(xhr)
                        alert('error');

                    }
                });
            }
            else {
                return false;
            }

            //window.confirm("Do you want  to delete the image!");
        });


    </script>
}
