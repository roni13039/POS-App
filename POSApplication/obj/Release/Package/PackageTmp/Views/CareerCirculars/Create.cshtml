@model POSApplication.Models.CareerCircular

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">Career Information</h5>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @*<h4>CareerCircular</h4>
                <hr />*@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.Label("JobTitle", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.ClientsName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Published Date", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.ClientsName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-5">
                        @Html.TextBox("PublishedDate", "", new { @class = "form-control Datepicker", @Value = @DateTime.Now.ToShortDateString() })
                        @*@Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Expired Date", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.ClientsName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-5">
                        @Html.TextBox("ExpiredDate", "", new { @class = "form-control Datepicker"})
                        @*@Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.ExpiredDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>


<div class="form-group" style="padding-top:20px;">
    @*@using (Html.BeginForm("SliderImageSave", "SliderImages", FormMethod.Post, new { enctype = "multipart/form-data", @id = "myform" }))
        {*@
    <div class="col-lg-3">
        <input type="hidden" value="" id="UId" name="UId" />
        @*<div class="col-lg-2">Upload Photo</div>*@
        <div class="col-lg-3">
            <input type="file" name="postedFiles" id="FileUpload1" />
        </div>
    </div>

    @*@*<input type="file" name="postedFiles" id="postedFiles" multiple="multiple" />*@ @*For uploading multiple files*@
    <br><br>

</div>


<div class="panel panel-primary panel-bordered">
    <div class="panel-body">
        <div class="form-group">
            <div class="col-md-12">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                <button type="button" class="btn btn-success" id="saveState">Save <i class="icon-arrow-right14 position-right"></i></button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('.Datepicker').datepicker({
            format: 'dd/mm/yyyy',
            todayHighlight: true,
            todayBtn: true,
            autoclose: true
        });

        $(".select2").select2();
    });


    $('#saveState').click(function () {


        if ($.trim($('#JobTitle').val()) === "") {
            alert('Job Title required');
            $('#JobTitle').focus();
        }

        else if ($.trim($('#PublishedDate').val()) === "") {
            alert('Published Date required');
            $('#PublishedDate').focus();
        }

        else if ($.trim($('#ExpiredDate').val()) === "") {
            alert('Expired Date required');
            $('#ExpiredDate').focus();
        }

        var file = $('#FileUpload1').val();
        if (file == '') {
            alert("Please Upload a Image");
        }

        else {
            SaveUserData();
        }



    });



    function SaveUserData() {

        $("#saveState").attr("disabled", "disabled");

        // save Image
        var fileUpload = $("#FileUpload1").get(0);
        var files = fileUpload.files;

        // Create FormData object
        var fileData = new FormData();

        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }

        // Adding one more key to FormData object

      //alert("ok");

        var JobTitle = $('#JobTitle').val();
        var PublishedDate = $('#PublishedDate').val();
        var ExpiredDate = $('#ExpiredDate').val();
        //alert(ClientsName);
        //alert(Description);
        fileData.append('JobTitle', JobTitle);
        fileData.append('PublishedDate', PublishedDate);
        fileData.append('ExpiredDate', ExpiredDate);

        //clients = JSON.stringify({
        //    Id: 0,
        //    ClientsName: ClientsName,
        //    Description: Description,
        //});


        $.ajax({

            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            type: 'POST',
            url: '/CareerCirculars/SaveData',
            data: fileData,
            success: function (result) {
                //console.log(result);
                $("#saveState").removeAttr("disabled");
                if (result.flag == true) {

                    $('#submit').click();


                    Swal.fire({
                        position: 'top',
                        icon: 'success',
                        title: 'Successfully Saved!',
                        showConfirmButton: true,
                    }).then((result) => {
                        if (result.value) {
                            window.location = "/CareerCirculars/Index";
                        }
                    })

                }
                else {
                    alert(result.message);
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Error: ' + textStatus + ' - ' + errorThrown);
                $("#saveState").removeAttr("disabled");
            }
        });

    }



</script>