@model POSApplication.Models.Customer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">Create Customers</h5>
    </div>
    <div class="panel-body">





        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>Customer</h4>
        <hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <input type="hidden" id="Message" value="@ViewBag.Message">

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hint, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Hint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hint, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control",@type="number"} })
                    @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control",@type="number"} })
                    @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
        }

        @*<div>
                @Html.ActionLink("Back to List", "Index")
            </div>*@

    </div> <!-- panel body -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {

        var message = $("#Message").val();

        if (message != "") {
            Swal.fire({
                position: 'top',
                icon: 'success',
                title: 'Successfully Saved!',
                showConfirmButton: true,
            }).then((result) => {
                if (result.value) {
                    window.location = "/Customers/Index";
                }
            })
        }
    });

    

    //$('#TotalPaid').change(function () {

    //    //var CustomerId = $('#CustomerId').val();
    //    var TotalPurchase = $('#TotalPurchase').val();
    //    var TotalPaid = $(this).val();
        
    //    if (TotalPurchase*1 > TotalPaid*1) {
    //        DueBalance = TotalPurchase*1 - TotalPaid*1;
    //        $("#DueBalance").val(DueBalance);
    //    }

    //    else {
    //        $("#DueBalance").val(0);
    //    }
    //});



    //$('#TotalPurchase').change(function () {

    //    //var CustomerId = $('#CustomerId').val();
    //    var TotalPurchase = $(this).val(); 
    //    var TotalPaid = $('#TotalPaid').val();

    //    if (TotalPurchase * 1 > TotalPaid * 1) {
    //        DueBalance = TotalPurchase * 1 - TotalPaid * 1;
    //        $("#DueBalance").val(DueBalance);
    //    }

    //    else {
    //        $("#DueBalance").val(0);
    //    }
    //});

</script>
}
